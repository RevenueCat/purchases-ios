import RevenueCatUI

extension CommonLocalizedString {

  public struct Localization : Equatable {

    let locale: String
    let localizedStrings: [String: String]
    public subscript(_ key: CommonLocalizedString) -> String

    public init(locale: String, localizedStrings: [String: String]) {
      self.locale = locale
      self.localizedStrings = localizedStrings}

    public enum CommonLocalizedString : String, Equatable {

      case free = "free"
      case subEarliestRenewal = "sub_earliest_renewal"
      case copyTitle = "copy_title"
      case screenPurchaseHistoryOthersTitle = "screen_purchase_history_others_title"
      case transactionId = "transaction_id"
      case screenPurchaseHistoryAccountDetailsTitle = "screen_purchase_history_account_details_title"
      case freeTrialSinglePaymentThenPrice = "free_trial_single_payment_then_price"
      case renewsOnDate = "renews_on_date"
      case yes = "yes"
      case discountedRecurringThenPrice = "discounted_recurring_then_price"
      case never = "never"
      case noThanks = "no_thanks"
      case purchasesRecovered = "purchases_recovered"
      case screenManagementTitle = "screen_management_title"
      case currentPrice = "current_price"
      case checkPastPurchases = "check_past_purchases"
      case goingToCheckPurchases = "going_to_check_purchases"
      case youHaveLifetime = "you_have_lifetime"
      case refundStatus = "refund_status"
      case purchaseInfoExpiredOnDate = "purchase_info_expired_on_date"
      case freeTrialUntilDate = "free_trial_until_date"
      case manageSubscription = "manage_subscription"
      case nextBillingDate = "next_billing_date"
      case inactive = "inactive"
      case youHavePromo = "you_have_promo"
      case dismiss = "dismiss"
      case screenPurchaseHistoryUserId = "screen_purchase_history_user_id"
      case pricePaid = "price_paid"
      case youMayHaveDuplicatedSubscriptionsTitle = "you_may_have_duplicated_subscriptions_title"
      case refundedAt = "refunded_at"
      case paidPrice = "paid_price"
      case nextRenewal = "next_renewal"
      case refundCanceled = "refund_canceled"
      case restorePurchases = "restore_purchases"
      case promoOfferSubtitle = "promo_offer_subtitle"
      case purchaseInfoExpiresOnDate = "purchase_info_expires_on_date"
      case updateWarningIgnore = "update_warning_ignore"
      case purchasesNotFound = "purchases_not_found"
      case platformMismatch = "platform_mismatch"
      case updateWarningDescription = "update_warning_description"
      case screenNoActiveTitle = "screen_no_active_title"
      case periodType = "period_type"
      case purchaseInfoRenewsOnDate = "purchase_info_renews_on_date"
      case done = "done"
      case defaultBody = "default_body"
      case screenPurchaseHistoryTitle = "screen_purchase_history_title"
      case updateWarningUpdate = "update_warning_update"
      case productId = "product_id"
      case screenPurchaseHistoryOriginalPurchaseDate = "screen_purchase_history_original_purchase_date"
      case surveyUsage = "survey_usage"
      case introductoryPrice = "introductory_price"
      case priceAfterwards = "price_afterwards"
      case trialPeriod = "trial_period"
      case noActiveCheckPurchases = "no_active_check_purchases"
      case amazonSubscriptionManage = "amazon_subscription_manage"
      case defaultSubject = "default_subject"
      case expired = "expired"
      case gracePeriodExpiresAt = "grace_period_expires_at"
      case youMayHaveDuplicatedSubscriptionsSubtitle = "you_may_have_duplicated_subscriptions_subtitle"
      case freeTrialThenPrice = "free_trial_then_price"
      case contactSupport = "contact_support"
      case pathCancel = "path_cancel"
      case originalDownloadDate = "original_download_date"
      case noSubscriptionsFound = "no_subscriptions_found"
      case surveyTooExpensive = "survey_too_expensive"
      case pathChange = "path_change"
      case appleSubscriptionManage = "apple_subscription_manage"
      case screenNoActiveSubtitle = "screen_no_active_subtitle"
      case pleaseContactSupport = "please_contact_support"
      case subEarliestExpiration = "sub_earliest_expiration"
      case purchasesNotRecovered = "purchases_not_recovered"
      case productName = "product_name"
      case screenManagementSeeAllPurchases = "screen_management_see_all_purchases"
      case billingCycle = "billing_cycle"
      case expires = "expires"
      case active = "active"
      case status = "status"
      case pathRefund = "path_refund"
      case refundGranted = "refund_granted"
      case expiresOnDateWithoutChanges = "expires_on_date_without_changes"
      case unsubscribedAt = "unsubscribed_at"
      case pathMissingPurchase = "path_missing_purchase"
      case updateWarningTitle = "update_warning_title"
      case googleSubscriptionManage = "google_subscription_manage"
      case purchasesRecoveredExplanation = "purchases_recovered_explanation"
      case subExpired = "sub_expired"
      case tryCheckRestore = "try_check_restore"
      case surveyMistake = "survey_mistake"
      case purchaseInfoPurchasedOnDate = "purchase_info_purchased_on_date"
      case promoOfferTitle = "promo_offer_title"
      case singlePaymentThenPrice = "single_payment_then_price"
      case sharedThroughFamilyMember = "shared_through_family_member"
      case billingIssueDetectedAt = "billing_issue_detected_at"
      case cancel = "cancel"
      case screenPurchaseHistoryActiveSubscriptionsTitle = "screen_purchase_history_active_subscriptions_title"
      case purchasesRestoring = "purchases_restoring"
      case webSubscriptionManage = "web_subscription_manage"
      case sandbox = "sandbox"
      case cancelSurveyTitle = "cancel_survey_title"
      case no = "no"
      case screenPurchaseHistoryExpiredSubscriptionsTitle = "screen_purchase_history_expired_subscriptions_title"
      case refundErrorGeneric = "refund_error_generic"
      case store = "store"
      case freeTrialDiscountedThenPrice = "free_trial_discounted_then_price"
      case renewsOnDateForPrice = "renews_on_date_for_price"

      public var defaultValue: String {
        switch self {
        case .free: return "Free"
        case .subEarliestRenewal: return "This is your subscription with the earliest billing date."
        case .copyTitle: return "Copy"
        case .screenPurchaseHistoryOthersTitle: return "Others"
        case .transactionId: return "TransactionID"
        case .screenPurchaseHistoryAccountDetailsTitle: return "Account Details"
        case .freeTrialSinglePaymentThenPrice: return "{{ sub_offer_duration }} for free, then {{ sub_offer_duration_2 }} for {{ sub_offer_price_2 }}, and {{ price }} thereafter"
        case .renewsOnDate: return "Renews on {{ date }}"
        case .yes: return "Yes"
        case .discountedRecurringThenPrice: return "{{ sub_offer_price }} during {{ sub_offer_duration }}, then {{ price }}"
        case .never: return "Never"
        case .noThanks: return "No, thanks"
        case .purchasesRecovered: return "Purchases restored"
        case .screenManagementTitle: return "How can we help?"
        case .currentPrice: return "Price"
        case .checkPastPurchases: return "Check past purchases"
        case .goingToCheckPurchases: return "Let’s take a look! We’re going to check your account for missing purchases."
        case .youHaveLifetime: return "Your active lifetime subscription"
        case .refundStatus: return "Refund status"
        case .purchaseInfoExpiredOnDate: return "Expired on {{ date }}"
        case .freeTrialUntilDate: return "Free trial until {{ date }}"
        case .manageSubscription: return "Manage your subscription"
        case .nextBillingDate: return "Next billing date"
        case .inactive: return "Inactive"
        case .youHavePromo: return "You’ve been granted a subscription that doesn’t renew"
        case .dismiss: return "Dismiss"
        case .screenPurchaseHistoryUserId: return "User ID"
        case .pricePaid: return "Paid {{ price }}"
        case .youMayHaveDuplicatedSubscriptionsTitle: return "You may have duplicated subscriptions"
        case .refundedAt: return "Refunded At"
        case .paidPrice: return "Paid price"
        case .nextRenewal: return "Next Renewal"
        case .refundCanceled: return "Refund canceled"
        case .restorePurchases: return "Restore purchases"
        case .promoOfferSubtitle: return "Before you go, here’s a one-time offer to continue at a discount."
        case .purchaseInfoExpiresOnDate: return "Expires on {{ date }}"
        case .updateWarningIgnore: return "Continue"
        case .purchasesNotFound: return "No past purchases"
        case .platformMismatch: return "Platform mismatch"
        case .updateWarningDescription: return "Downloading the latest version of the app may help solve the problem."
        case .screenNoActiveTitle: return "No subscriptions found"
        case .periodType: return "Period Type"
        case .purchaseInfoRenewsOnDate: return "Renews on {{ date }}"
        case .done: return "Done"
        case .defaultBody: return "Please describe your issue or question."
        case .screenPurchaseHistoryTitle: return "Purchase History"
        case .updateWarningUpdate: return "Update"
        case .productId: return "Product ID"
        case .screenPurchaseHistoryOriginalPurchaseDate: return "Original Download Date"
        case .surveyUsage: return "Don't use the app"
        case .introductoryPrice: return "Introductory Price"
        case .priceAfterwards: return "{{ price }} afterwards."
        case .trialPeriod: return "Trial Period"
        case .noActiveCheckPurchases: return "Restore past purchases"
        case .amazonSubscriptionManage: return "You have an active subscription from the Amazon Appstore. You can manage your subscription in the Amazon Appstore app."
        case .defaultSubject: return "Support Request"
        case .expired: return "Expired"
        case .gracePeriodExpiresAt: return "Grace Period Expires At"
        case .youMayHaveDuplicatedSubscriptionsSubtitle: return "You might be subscribed both on the web and through the App Store. To avoid being charged twice, please cancel your iOS subscription in your device settings."
        case .freeTrialThenPrice: return "{{ sub_offer_duration }} free, then {{ price }}"
        case .contactSupport: return "Contact support"
        case .pathCancel: return "Cancel subscription"
        case .originalDownloadDate: return "Original Download Date"
        case .noSubscriptionsFound: return "No Subscriptions found"
        case .surveyTooExpensive: return "Too expensive"
        case .pathChange: return "Change plans"
        case .appleSubscriptionManage: return "You can manage your subscription by using the App Store app on an Apple device."
        case .screenNoActiveSubtitle: return "We can check for previous purchases"
        case .pleaseContactSupport: return "Please contact support to manage your subscription."
        case .subEarliestExpiration: return "This is your subscription with the earliest expiration date."
        case .purchasesNotRecovered: return "We could not find any purchases with your account. If you think this is an error, please contact support."
        case .productName: return "Product name"
        case .screenManagementSeeAllPurchases: return "See all purchases"
        case .billingCycle: return "Billing cycle"
        case .expires: return "Expires"
        case .active: return "Active"
        case .status: return "Status"
        case .pathRefund: return "Request a refund"
        case .refundGranted: return "Refund requested"
        case .expiresOnDateWithoutChanges: return "Expires on {{ date }} without further charges."
        case .unsubscribedAt: return "Unsubscribed At"
        case .pathMissingPurchase: return "Restore past purchases"
        case .updateWarningTitle: return "Update available"
        case .googleSubscriptionManage: return "You have an active subscription from the Google Play Store"
        case .purchasesRecoveredExplanation: return "We restored your past purchases and applied them to your account."
        case .subExpired: return "This subscription has expired."
        case .tryCheckRestore: return "We can try checking your Apple account for any previous purchases"
        case .surveyMistake: return "Bought by mistake"
        case .purchaseInfoPurchasedOnDate: return "Purchased on {{ date }}"
        case .promoOfferTitle: return "Wait!"
        case .singlePaymentThenPrice: return "{{ sub_offer_duration }} for {{ sub_offer_price }}, then {{ price }}"
        case .sharedThroughFamilyMember: return "Shared through family member"
        case .billingIssueDetectedAt: return "Billing Issue Detected At"
        case .cancel: return "Cancel"
        case .screenPurchaseHistoryActiveSubscriptionsTitle: return "Active Subscriptions"
        case .purchasesRestoring: return "Restoring..."
        case .webSubscriptionManage: return "You have an active subscription that was purchased on the web. You can manage your subscription using the button below."
        case .sandbox: return "Sandbox"
        case .cancelSurveyTitle: return "Why are you cancelling?"
        case .no: return "No"
        case .screenPurchaseHistoryExpiredSubscriptionsTitle: return "Expired Subscriptions"
        case .refundErrorGeneric: return "An error occurred while processing the refund request. Please try again."
        case .store: return "Store"
        case .freeTrialDiscountedThenPrice: return "{{ sub_offer_duration }} for free, then {{ sub_offer_price_2 }} during {{ sub_offer_duration_2 }}, and {{ price }} thereafter"
        case .renewsOnDateForPrice: return "Renews on {{ date }} for {{ price}}."
        default: return self.rawValue.capitalized
        }
      }

    }

  }

}
