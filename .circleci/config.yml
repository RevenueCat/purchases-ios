version: 2.1
commands:
  install-gems:
    parameters:
      directory:
        type: string
    steps:
       # Bundler
      - restore_cache:
          keys: 
            - gem-cache-{{ checksum "Gemfile.lock" }}
      - run: 
          name: Bundle install
          command: |
              cd << parameters.directory >>
              bundle install --clean --path vendor/bundle
      - save_cache:
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
  scan-and-archive:
    parameters:
      directory:
        type: string
    steps:
      - run:
          name: Run tests
          command: |
              bundle exec fastlane replace_api_key_integration_tests
              cd << parameters.directory >>
              bundle exec fastlane scan
      - store_test_results:
          path: fastlane/test_output
      - store_artifacts:
          path: fastlane/test_output/report.html
          destination: test_report.html
      - run:
          name: Archive
          command: |
              cd << parameters.directory >>
              bundle exec fastlane archive
  
  install-gems-scan-and-archive:
    parameters:
      directory:
        type: string
    steps:
      - install-gems:
          directory: << parameters.directory >>
      - scan-and-archive:
          directory: << parameters.directory >>


jobs:
  runtest:
    macos:
      xcode: "12.0"
    working_directory: ~/purchases-ios
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      
      # Carthage
      - restore_cache:
          keys: 
            - carthage-cache-{{ checksum "Cartfile.resolved" }}
      - run:
          name: Carthage Bootstrap
          command: |
              ./carthage.sh bootstrap --cache-builds
      - save_cache:
          key: carthage-cache-{{ checksum "Cartfile.resolved" }}
          paths:
            - Carthage
      
      - install-gems:
          directory: .
      
      - run:
          name: Run tests
          command: fastlane scan
          environment:
            SCAN_SCHEME: All Tests
      - store_test_results:
          path: fastlane/test_output
      - store_artifacts:
          path: fastlane/test_output/report.html
          destination: test_report.html
  docs-deploy:
    macos:
      xcode: "12.0"
    working_directory: ~/purchases-ios
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - install-gems:
          directory: .
      - run:
          name: Build docs
          command: fastlane run jazzy
      - run:
          name: Install awscli
          command: sudo python3 -m pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 sync docs s3://purchases-docs/ios --delete --acl public-read
      - run:
          name: Invalidate CloudFront caches
          command: aws cloudfront create-invalidation --distribution-id EPTW7F3CB566V --paths "/*"
  

  integration-tests-cocoapods:
    macos:
      xcode: "12.0"
    working_directory: ~/purchases-ios/
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      
      - install-gems:
          directory: "."
      - install-gems:
          directory: "IntegrationTests/CocoapodsIntegration"

      - run:
          name: Install Pods
          command: |
              cd IntegrationTests/CocoapodsIntegration/
              pod install
      
      - scan-and-archive:
          directory: "IntegrationTests/CocoapodsIntegration"
      
  integration-tests-swift-package-manager:
    macos:
      xcode: "12.0"
    working_directory: ~/purchases-ios/
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout

      - install-gems-scan-and-archive:
          directory: "IntegrationTests/SPMIntegration/"
      
  integration-tests-carthage:
    macos:
      xcode: "12.0"
    working_directory: ~/purchases-ios/
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      
      # Carthage
      - restore_cache:
          keys: 
            - carthage-cache-{{ checksum "Cartfile.resolved" }}
      - run:
          name: Carthage Update
          command: |
              cd IntegrationTests/CarthageIntegration/
              ./carthage.sh update --cache-builds
      - save_cache:
          key: carthage-cache-{{ checksum "Cartfile.resolved" }}
          paths:
            - Carthage
      
      - install-gems-scan-and-archive:
          directory: "IntegrationTests/CarthageIntegration/"

  integration-tests-xcode-direct-integration:
    macos:
      xcode: "12.0"
    working_directory: ~/purchases-ios/
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout

      - install-gems-scan-and-archive:
          directory: "IntegrationTests/XcodeDirectIntegration/"

workflows:
  version: 2
  build-test:
    jobs:
      - runtest
      - integration-tests-cocoapods
      - integration-tests-swift-package-manager
      - integration-tests-carthage
      - integration-tests-xcode-direct-integration
  docs:
    jobs:
      - docs-deploy:
          filters:
            tags:
              ignore: /^.*-SNAPSHOT/
            branches:
              ignore: /.*/

